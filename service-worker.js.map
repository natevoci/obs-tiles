{"mappings":"AAAAA,KAAKC,iBAAL,WAAA,KACCC,QAAQC,IAAR,4BAGDH,KAAKC,iBAAL,YAAA,SAA2CG,GAC1CF,QAAQC,IAAR,0BACAC,EAAMC,UAELC,OAAOC,OAAOC,MAAKC,GAAcC,QAAQC,IACxCF,EAAWG,KAAIC,GACPP,OAAOQ,OAAOD,YAMzBb,KAAKC,iBAAL,SAA+BG,mBAIXW,KAAKX,EAAMY,QAAQC,MACrCb,EAAMc,YACLZ,OAAOa,KAAP,oBAAgCX,MAAKY,GAC1BA,EAAMC,MAAMjB,EAAMY,SAASR,MAAKc,GAClCA,GAAYC,MAAMnB,EAAMY,SAASR,MAAKc,IAC5CF,EAAMI,IAAIpB,EAAMY,QAASM,EAASG,SAC3BH","sources":["src/service-worker.js"],"sourcesContent":["self.addEventListener('install', () => {\r\n\tconsole.log('server-worker install');\r\n});\r\n\r\nself.addEventListener('activate', function(event) {\r\n\tconsole.log('server-worker activate');\r\n\tevent.waitUntil(\r\n\t\t// Clear cache when a new version is available\r\n\t\tcaches.keys().then(cacheNames => Promise.all(\r\n\t\t\tcacheNames.map(cacheName => {\r\n\t\t\t\treturn caches.delete(cacheName);\r\n\t\t\t})\r\n\t\t)),\r\n\t);\r\n});\r\n\r\nself.addEventListener('fetch', event => {\r\n\t// console.log(`server-worker fetch: ${event.request.url}`);\r\n\r\n\t// Just cache http and https request. (ie. don't cache chrome-extension requests)\r\n\tif (/^https?:\\/\\//.exec(event.request.url)) {\r\n\t\tevent.respondWith(\r\n\t\t\tcaches.open('obs-tiles-static').then(cache => {\r\n\t\t\t\tconst r = cache.match(event.request).then(response => {\r\n\t\t\t\t\treturn response || fetch(event.request).then(response => {\r\n\t\t\t\t\t\tcache.put(event.request, response.clone());\r\n\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\treturn r;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n});\r\n"],"names":["self","addEventListener","console","log","event","waitUntil","caches","keys","then","cacheNames","Promise","all","map","cacheName","delete","exec","request","url","respondWith","open","cache","match","response","fetch","put","clone"],"version":3,"file":"service-worker.js.map"}